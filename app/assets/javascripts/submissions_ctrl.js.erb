(function () {
  "use strict";

  angular.module("app").controller("submissionsCtrl", function($scope, $compile, $http, Upload) {
    $scope.texts = [];
    $scope.files = [];
    $scope.comments = [];
    $scope.allStudentInstructorComments = [];
    $scope.submittedText = {text: null};
    $scope.submission_viewed = null;
    $scope.comment_viewed = null;
    $scope.combined_viewed = null;
    $scope.commentText = "";

    $scope.setup = function(assignment_id, student_id) {
      $scope.assignment_id = assignment_id;
      $scope.student_id = student_id;
      $http.get('/api/v1/submissions?assignment_id='+assignment_id+'&student_id='+student_id).then(function(response) {
        $scope.submissions = response.data;
        if($scope.submissions.length > 0) {
          $scope.getFiles();
          $scope.getTexts();
          $scope.checkViewedSubmission();
        } 
      }, function(response) {
      });
      $scope.getComments();
    }

    $scope.getComments = function() {
      $http.get('/api/v1/comments?assignment_id='+$scope.assignment_id+'&student_id='+$scope.student_id).then(function(response) {
        $scope.comments = response.data["comments_per_student"];
        $scope.allStudentInstructorComments = response.data["instructor_comments"];
        if($scope.comments.length > 0) {
          $scope.checkViewedComment();
        }
      });
    }

    $scope.getFiles = function() {
      for (var i = 0; i < $scope.submissions.length; i++) {
        if ($scope.submissions[i].name) {
          var file = {
            id: $scope.submissions[i].id,
            name: $scope.submissions[i].name,
            created_at: $scope.submissions[i].created_at
          };
          $scope.files.push(file);
        }
      }
    }

    $scope.getTexts = function() {
      for (var i = 0; i < $scope.submissions.length; i++) {
        if ($scope.submissions[i].answer) {
          var text = {
            id: $scope.submissions[i].id,
            answer: $scope.submissions[i].answer,
            created_at: $scope.submissions[i].created_at
          };
          $scope.texts.push(text);
        }
      }
      Prism.highlightAll();   
    }

    $scope.checkViewedSubmission = function() {
      if ($scope.submissions[$scope.submissions.length - 1].viewed_by_admin === false) {
        $scope.submission_viewed = false;
      } else {
        $scope.submission_viewed = true;
      }
      $scope.checkViewedByAdmin();
    }

    $scope.checkViewedComment = function() {
      if ($scope.comments[$scope.comments.length - 1].viewed_by_admin === false) {
        $scope.comment_viewed = false;
      } else {
        $scope.comment_viewed = true;
      }
      $scope.checkViewedByAdmin();
    }

    $scope.checkViewedByAdmin = function() {
      if ($scope.submission_viewed && $scope.comment_viewed) {
        $scope.combined_viewed = true;
      } else if ($scope.submission_viewed && $scope.comment_viewed === null) {
        $scope.combined_viewed = true;
      } else if ($scope.submission_viewed === null && $scope.comment_viewed) {
        $scope.combined_viewed = true;
      } else {
        $scope.combined_viewed = false;
      }
    }

    $scope.uploadFiles = function(uploadingFiles) {
      for (var i = 0; i < uploadingFiles.length; i++) {
        var file = uploadingFiles[i];
        $scope.upload = Upload.upload({
          url: '/api/v1/submissions',
          method: 'POST',
          fields: {assignment_id: $scope.assignment_id, student_id: $scope.student_id},
          file: file,
          fileFormDataName: 'submission[solution]'
        }).success(function (data, status, headers, config) {
          var uploadedFile = {
            id: data.id,
            name: data.name,
            created_at: data.created_at
          };
          $scope.files.push(uploadedFile);
          $scope.submissions.push(uploadedFile);
        });

      }
    }

    $scope.deleteFile = function(file) {
      $http.delete('/api/v1/submissions/'+file.id).then(function(response) {
        var index = $scope.files.indexOf(file);
        $scope.files.splice(index, 1)
      });
    }



    $scope.submitText = function(text) {
      if (text && text.length != 0) {
        $http.post('/api/v1/submissions?assignment_id='+$scope.assignment_id, {submission_text: text, student_id: $scope.student_id}).then(function(response) {
          var text = {
            id: response.data.id,
            answer: response.data.answer,
            created_at: response.data.created_at,
            viewed_by_admin: response.data.viewed_by_admin
          };
          $scope.submissions.push(text);
          $scope.texts.push(text);
          $scope.submittedText.text = null;
        }, function(response) {

        });
      }
    }

    $scope.submitCommentText = function(text) {
      var codeTagsAdded = $scope.addCodeTagsIfPresent(text);
      var comment = {
        comment_text: codeTagsAdded,
        assignment_id: $scope.assignment_id,
        student_id: $scope.student_id 
      };
      $http.post('/api/v1/comments', comment).then(function(response) {
        var comment = response.data;
        $scope.comments.push(comment);
        $scope.commentText = "";
      }, function(response) {
      });
    }

    $scope.addCodeTagsIfPresent = function(text) {
      var openingTag = true;
      while(text.indexOf("```") != -1) {
        if (openingTag) {
          text = text.replace("```", "<pre ng-prism class='language-ruby'><code>");
          var openingTag = false;
        } else {
          text = text.replace("```", "</code></pre>");
          var openingTag = true;
        }
      }
      return text
    }

    $scope.downloadFile = function(file) {
      $http.get('/api/v1/submissions/download_file?id='+file.id+'&file_name='+file.name).then(function(response) {
        var fileURL = response.data.url;
        var a         = document.createElement('a');
        a.href        = fileURL; 
        a.target      = '_blank';
        a.download    = 'test';
        document.body.appendChild(a);
        a.click();
      }, function(response) {

      });
    }

    $scope.changeViewedByAdmin = function() {
      if ($scope.submission_viewed === false || $scope.comment_viewed === false) {
        var update_viewed = true;
      } else {
        var update_viewed = false;
      }
      if ($scope.submissions.length > 0 && update_viewed != $scope.Submission_viewed) {
        var sub_index = $scope.submissions.length - 1;
        var lastSubmission = $scope.submissions[sub_index];
        $http.patch('/api/v1/submissions/'+lastSubmission.id, {update_viewed: !$scope.submission_viewed}).then(function(response) {
          var submission = response.data.submission;
          $scope.submissions[sub_index] = submission;
          $scope.checkViewedSubmission();
        });
      }
      if ($scope.comments.length > 0 && update_viewed != $scope.comment_viewed) {
        var com_index = $scope.comments.length - 1;
        var lastComment = $scope.comments[com_index];
        $http.patch('/api/v1/comments/'+lastComment.id, {update_viewed: !$scope.comment_viewed}).then(function(response) {
          var comment = response.data.comment;
          $scope.comments[com_index] = comment;
          $scope.checkViewedComment();
        });
      }
    }

    $scope.addPreviousInstructorComment = function(comment) {
      var textBackTicked = $scope.removeCodeTagsIfPresent(comment.text);
      $scope.commentText += textBackTicked;
    }

    $scope.removeCodeTagsIfPresent = function(text) {
      return text.replace(/<pre ng-prism class='language-ruby'><code>|<\/code><\/pre>/g, "```");
    }



    window.scope = $scope;

  });
})();